from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.filters import Command, CommandStart
from lexicon import lexicon
from random import choice
from keyboards import keyboards
from utils import utils

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä –º–æ–¥—É–ª—è
router = Router()


# —Ö–µ–Ω–¥–ª–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(CommandStart())
async def process_start_command(message: Message):
    # —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ —é–∑–µ—Ä –≤ —Å–ª–æ–≤–∞—Ä–µ, –µ—Å–ª–∏ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏
    # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    utils.chek_user(message.from_user.id)
    await message.answer(
        text=choice(lexicon.LEXICON_RU['/start']),
        reply_markup=keyboards.yn_keyboard
        )


# —Ö–µ–Ω–¥–ª–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
@router.message(Command(commands='help'))
async def process_help_command(message: Message):
    await message.answer(
        text=lexicon.LEXICON_RU['/help'],
        reply_markup=keyboards.yn_keyboard
    )


# —Ö–µ–Ω–¥–ª–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–∞"
@router.message(F.text == '–î–∞! üëå')
async def process_yes_answer(message: Message):
    await message.answer(
        text=choice(lexicon.LEXICON_RU['yes']),
        reply_markup=keyboards.choise_keyboard,
    )


# —Ö–µ–Ω–¥–ª–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–µ—Ç"
@router.message(F.text == '–ù–µ—Ç ‚õî')
async def process_no_answer(message: Message):
    await message.answer(text=lexicon.LEXICON_RU['no'])


# —Ö–µ–Ω–¥–ª–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞ –≤—ã–±–æ—Ä —é–∑–µ—Ä–∞ –≤ –∏–≥—Ä–µ
@router.message(F.text.in_(lexicon.options))
async def process_game_answer(message: Message):
    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
    bot_go = choice(lexicon.options)
    await message.answer(
        text=utils.generate_answer(
            message.text, bot_go, message.from_user.id
            )
        )


# —Ö–µ–Ω–¥–ª–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞ –∫–Ω–æ–ø–∫—É "–∞–∞—Å—Ç–∞–Ω–∞–≤–∏—Ç–µ—Å—å"
@router.message(F.text == '–ê–∞—Å—Ç–∞–Ω–∞–≤–∏—Ç–µ—Å—å... ‚õî')
async def process_stop_command(message: Message):
    await message.answer(
        text=choice(lexicon.LEXICON_RU['stop_phrases']),
        reply_markup=ReplyKeyboardRemove()
        )


# —Ö–µ–Ω–¥–ª–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±—â–∏–π —Å—á–µ—Ç" (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)
@router.message(F.text == '–û–±—â–∏–π —Å—á–µ—Ç ‚úè')
async def process_stat_command(message: Message):
    await message.answer(text=utils.stat_func(message.from_user.id))


# —Ö–µ–Ω–¥–ª–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞ —Å–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
@router.message(F.text == '–°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç üóë')
async def process_reset_stat_command(message: Message):
    # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ —Ñ—É–Ω–∫—Ü–∏–∏
    ans_string = utils.reset_stat(message.from_user.id)
    await message.answer(
        text=ans_string,
        reply_markup=keyboards.yn_keyboard
        )
